/* ******************** BASIC FUNC1 ************************* */
/*********** (1) Write a program to take 2 numbers from user and 
                calculate sum of all numbers between them. *********************/
				
int sum_between_two_numpers(int num1,int num2)
{
	int i;
	int sum=0;
	int temp;
	if(num1>num2)
	{
		temp=num1;
		num1=num2;
		num2=temp;
	}
	for(i=num1+1;i<num2;i++)
	{
		sum+=i;
	}
	return sum;
	
}
/***********  (2) Write a program to take numbers from user and find the max and min from them 
(let users choose the No of numbers. *********************/

void max_min_users_input(int numper_of_numpers,int *max_between_numpers,int*min_between_numpers)
{
	int i;
	int num;
	for(i=0;i<numper_of_numpers;i++)
	{
		scanf("%d",&num);
		if(i==0)
		{
			*max_between_numpers=num;
			*min_between_numpers=num;
		}
		if(num>*max_between_numpers)
		{
			*max_between_numpers=num;
		}
		if(num<*min_between_numpers)
		{
			*min_between_numpers=num;
		}
	}
}
/*(3) Write a program to take numbers from user and 
calculate the sum of them (let users choose the No of 
numbers.*/
int sum_numpers(int numper_of_numpers)
{
	int num;
	int sum=0;
	int i;
	for(i=0;i<numper_of_numpers;i++)
	{
		scanf("%d",&num);
		sum+=num;
	}
	return sum;
}
/*(4) Write a program to take numbers from user and 
calculate the sum of them (let users choose the No of 
numbers.*/
int multiple_without_mul_opp(int num1,int num2)
{
	int i;
	int flag=0;
	int mul=0;
	if(num1<0)
	{
		num1=~num1+1;
		flag++;
	}
	if(num2<0)
	{
		num2=~num2+1;
		flag++;
	}
	
	
	for(i=0;i<num1;i++)
	{
		mul+=num2;
	}
	if(flag==1)
	{
		mul=~mul+1;
	}
	return mul;
}
/* (5) Write a program that take two numbers and calculate 
the reminder without using % operation.*/
int reminder_without(int num1,int num2)
{
	int count=0;
	while(num1>=num2)
	{
		num1=num1-num2;
		count++;
	}
	printf("divide=%d\n",count);
	return num1;
		
}
/* (6) Write a program to calculate the power of a number. 
The number and its power are input from user.*/
float power(int num1,int exponent)
{
	int i;
	float r=1;
	int flag=0;
	if(exponent<0)
	{
		exponent=~exponent+1;
		flag=1;
	}
	for(i=0;i<exponent;i++)
	{
		r=r*num1;
	}
	if(flag==1)
	{
		r=1/r;
	}
	return r;
}
/*(7) Write a program that reads a positive integer and 
computes the factorial.*/
int factorial(int num)
{
	int r=1;
	int i;
	for(i=1;i<=num;i++)
	{
		r=r*i;
	}
	return r;
}
/*(8) Write a program that reads a positive integer and 
checks if it is a prime.*/
int prime(int num)
{
	int flag=1;
	if(num==1||num==0)
	{
		flag=0;
	}
	int i;
	for(i=2;i<=num/2&&flag==1;i++)
	{
		if(num%i==0)
		{
			flag=0;
		}
	}
	return flag;
}
/*(9) Write a program that reads a positive integer and 
checks if it is a perfect square/*
int perfect_square(int num)
{
	int i;
	int r=0;
	for(i=1;i*i<=num;i++)
	{
		if(i*i==num)
		{
			r=1;
		}
	}
	return r;
}
/* (10) Write a program that reads a positive integer and check 
if this number is a base of 2 like 1,2,4,8,16,32, 64.../*
int base_of_two(int num)
{
	int r=0;
	if(0x80000000%num==0)
	{
		r=1;
	}
	return r;
}
/*(11) Write a program to sum the digits in a decimal number 
145 -> 1+4+5=10 */
int sum_digits(int num)
{
	int sum=0;
	while(num)
	{
		sum+=num%10;
		num/=10;
	}
	return sum;
}
/*(12) write a program to take even numbers from user and 
print the sum of them after each entry if the user enters
2 odd number the program print "bye" and stopped*/
int sum_even_numpers(void)
{
	int flag=0;
	int num;
	int sum=0;
	
	while(flag<=1)
	{
	scanf("%d",&num);
	if(1&num)
	{
		flag++;
	}
	else
	{
		sum+=num;
	}
	}
	return sum;
	
	
}
/* (13) You are designing a poster which prints out numbers 
with a unique style applied to each of them. The styling 
is based on the number of closed paths or holes present 
in a giver number. The number of holes that each of the 
digits from 0 to 9 have are equal to the number of 
closed paths in the digit. Their values are: 
1, 2, 3, 5 and 7 = 0 holes. 
 0, 4, 6, and 9 = 1 hole. 
8 = 2 holes. 
Example if number 3824->3 has 0 holes,8 has 2 
holes,4 has 1hole sum=0+2+1=3*/

int numper_of_holes(int num)
{
	int percent;
	int numper_of_holes=0;
	while(num)
	{
		percent=num%10;
		if(percent==8)
		{
			numper_of_holes=numper_of_holes+2;
		}
		else if(percent==0||percent==4||percent==6||percent==9)
		{
			numper_of_holes++;
		}
		else
		{
			
		}
		num=num/10;
	
	}
	return numper_of_holes;
	
}